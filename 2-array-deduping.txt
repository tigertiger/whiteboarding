Question #2: Array Deduping
Write an algorithm that removes duplicates from an array. Do not use a function like filter() to solve this. Once you have solved the problem, demonstrate how it can be solved with filter(). Solve the problem with and without recursion.

Example
Input: [7, 9, "hi", 12, "hi" 7, 53]

Output: [7, 9, "hi", 12, 53]

---------------------------------------------------------------------------

//without recursion

function deduper(array) {
  let singleArray = [];
  for (let i = 0; i < array.length; i ++ ) {
    if (singleArray.includes(array[i])) {
      console.log(array[i]);
    } else {
      singleArray.push(array[i]);
    }
  }
  return singleArray;
}









---------------------------------------------------------------------------
Old grabj:

let array = [7, 9, "hi", 12, "hi", 7, 53];
function deduper(array) {
  let singleArray = [];
  for (let i = 0; i < array.length; i ++ ) {
    if (singleArray.contains(array[i]) === false) {
      singleArray.push(array[i]);
    }
  }
  return singleArray;
}

//

let array = [7, 9, "hi", 12, "hi", 7, 53];
  let singleArray = [];
function deduper(array) {
  for (let i = 0; i < array.length; i ++ ) {
    if (singleArray.includes(array[i])) {
      console.log(array[i]);
    } else {
      singleArray.push(array[i]);
    }
  }
  return singleArray;
}
  console.log(singleArray);